# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login
        # You may pin to the exact commit or the version.
        # uses: docker/login-action@dd4fa0671be5250ee6f50aedf4cb05514abda2c7
        uses: docker/login-action@v1.14.1
        with:
          # Server address of Docker registry. If not set then will default to Docker Hub
          registry: ${{ secrets.ACR_NAME }}
          # Username used to log against the Docker registry
          username: ${{ secrets.ACR_LOGIN }}
          # Password or personal access token used to log against the Docker registry
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build and push staging image
        # You may pin to the exact commit or the version.
        # uses: docker/build-push-action@7f9d37fa544684fb73bfe4835ed7214c255ce02b
        uses: docker/build-push-action@v2.9.0
        with:
          context: .
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest
          push: true
  deploy:
    runs-on: ubuntu-latest
    needs: build_push_image # Will wait for the execution of the previous job
    steps:
      - uses: actions/checkout@v2
      - name: Helm tool installer
        uses: Azure/setup-helm@v1
        with:
          # Version of helm
          version:  v3.3.1
      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v1
        with:
          # Azure credentials, i.e., output of `az ad sp create-for-rbac --scopes /subscriptions/<SUBSCRIPTION-ID> --role Contributor --sdk-auth`
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource group name
          resource-group: mslearn-gh-pipelines-18804
          # AKS cluster name
          cluster-name: contoso-video
      - name: Run Helm Deploy
        run: |
          helm upgrade \
              --install \
              --create-namespace \
              --atomic \
              --wait \
              --namespace staging \
              contoso-website \
              ./kubernetes/contoso-website \
              --set image.repository=${{ secrets.ACR_NAME }} \
              --set dns.name=${{ secrets.DNS_NAME }}
